<%#
 Copyright 2008 Steven Barth <steven@midlink.org>
 Copyright 2008-2011 Jo-Philipp Wich <jow@openwrt.org>
 Licensed to the public under the Apache License 2.0.
-%>

<%
local util = require "luci.util"
local uci = require "luci.model.uci".cursor()

local function online_data()
    local rv = {}
    local dhcp_hostnames = {}

    -- 从 dhcp 配置文件中读取自定义主机名
    uci:foreach("dhcp", "host", function(s)
        if s.ip and s.name then
            dhcp_hostnames[s.ip] = s.name
        end
    end)

    uci:foreach("dhcp", "domain", function(s)
        if s.ip and s.name then
            dhcp_hostnames[s.ip] = s.name
        end
    end)

    -- 从 /tmp/dhcp.leases 文件中读取主机名
    local leases_fd = io.open("/tmp/dhcp.leases", "r")
    if leases_fd then
        for ln in leases_fd:lines() do
            local ts, mac, ip, name = ln:match("^(%S+) (%S+) (%S+) (%S+)")
            if ip and name and name ~= "*" then
                dhcp_hostnames[ip] = name
            end
        end
        leases_fd:close()
    end

    -- 使用 ip neigh 命令获取 IPv4 邻居信息
    local fd = io.popen('ip -4 neigh')
    local seen_devices = {}

    for ln in fd:lines() do
        local ip, dev, mac, state = ln:match("^(%S+) dev (%S+) lladdr (%S+) (%S+)")
        if ip and dev and mac and state then
            local hostname = dhcp_hostnames[ip] or "?"
            local device_key = mac:lower() .. "-" .. ip
            seen_devices[device_key] = true
            rv[#rv+1] = {
                hostname = hostname,
                device  = dev,
                macaddr  = mac,
                ipaddr   = ip
            }
        end
    end

    fd:close()
    return rv
end

if luci.http.formvalue("status") == "1" then
    local rv = {
        onlines   = online_data()
    }    
    luci.http.prepare_content("application/json")
    luci.http.write_json(rv)
    return
end    
-%>

<%+header%>

<script type="text/javascript" src="<%=resource%>/cbi.js?v=git-19.271.33176-b099749"></script>
<script type="text/javascript">//<![CDATA[
    var npoll = 1;

    XHR.poll(5, '<%=REQUEST_URI%>', { status: 1 },
        function(x, info)
        {
            var ls = document.getElementById('online_status_table');
            if (ls)
            {
                /* clear all rows */
                while( ls.rows.length > 1 )
                    ls.rows[0].parentNode.deleteRow(1);

                for( var i = 0; i < info.onlines.length; i++ )
                {

                    var tr = ls.rows[0].parentNode.insertRow(-1);
                        tr.className = 'cbi-section-table-row cbi-rowstyle-' + ((i % 2) + 1);

                    tr.insertCell(-1).innerHTML = info.onlines[i].hostname ? info.onlines[i].hostname : '?';
                    tr.insertCell(-1).innerHTML = info.onlines[i].ipaddr.split("/").join("<br>");
                    tr.insertCell(-1).innerHTML = info.onlines[i].macaddr;
                    tr.insertCell(-1).innerHTML = info.onlines[i].device;
                }

                if( ls.rows.length == 1 )
                {
                    var tr = ls.rows[0].parentNode.insertRow(-1);
                        tr.className = 'cbi-section-table-row';

                    var td = tr.insertCell(-1);
                        td.colSpan = 4;
                        td.innerHTML = '<em><br /><%:There is no one online now.%></em>';
                }
            }
        }
    );
//]]></script>

<h2 name="content"><%:Status%></h2>

<fieldset class="cbi-section">
    <legend><%:user online%></legend>

    <table class="cbi-section-table" id="online_status_table">
        <tr class="cbi-section-table-titles">
            <th class="cbi-section-table-cell"><%:Hostname%></th>
            <th class="cbi-section-table-cell"><%:IPv4-Address%></th>
            <th class="cbi-section-table-cell"><%:MAC-Address%></th>
            <th class="cbi-section-table-cell"><%:Interface%></th>
        </tr>
        <tr class="cbi-section-table-row">
            <td colspan="4"><em><br /><%:Collecting data...%></em></td>
        </tr>
    </table>
</fieldset>

<%+footer%>